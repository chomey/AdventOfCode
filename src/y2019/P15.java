package y2019;

public class P15 {
	static int[] pattern = new int[]{0, 1, 0, -1};

	public static void main(String[] args) {
		String inputString = "59702216318401831752516109671812909117759516365269440231257788008453756734827826476239905226493589006960132456488870290862893703535753691507244120156137802864317330938106688973624124594371608170692569855778498105517439068022388323566624069202753437742801981883473729701426171077277920013824894757938493999640593305172570727136129712787668811072014245905885251704882055908305407719142264325661477825898619802777868961439647723408833957843810111456367464611239017733042717293598871566304020426484700071315257217011872240492395451028872856605576492864646118292500813545747868096046577484535223887886476125746077660705155595199557168004672030769602168262";
		for (int phase = 0; phase < 100; phase++) {
			StringBuilder result = new StringBuilder();
			for (int numOperations = 1; numOperations <= inputString.length(); numOperations++) {
				int subResult = 0;
				for (int j = 0; j < inputString.length(); j++) {
					int nextNumber = getNextNumber(numOperations, j);
					subResult += (Integer.parseInt("" + inputString.charAt(j)) * nextNumber) % 10;
				}
				result.append(Math.abs(subResult) % 10);
			}
			inputString = result.toString();
		}
		System.out.println(inputString);
	}

	private static int getNextNumber(int phase, int count) {
		return pattern[((count + 1) / phase) % 4];
	}
}
